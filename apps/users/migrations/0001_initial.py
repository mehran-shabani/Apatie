# Generated by Django 5.2.7 on 2025-10-05 08:19

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Updated at")),
                (
                    "mobile",
                    models.CharField(
                        db_index=True,
                        max_length=11,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Mobile number must be 11 digits starting with 09",
                                regex="^09\\d{9}$",
                            )
                        ],
                        verbose_name="Mobile number",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        unique=True,
                        verbose_name="Email address",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(blank=True, max_length=150, verbose_name="First name"),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, max_length=150, verbose_name="Last name"),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("customer", "Customer"),
                            ("vendor", "Vendor"),
                            ("admin", "Admin"),
                        ],
                        default="customer",
                        max_length=20,
                        verbose_name="User type",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                ("is_staff", models.BooleanField(default=False, verbose_name="Staff status")),
                ("is_verified", models.BooleanField(default=False, verbose_name="Mobile verified")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="OTPCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Created at")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Updated at")),
                (
                    "mobile",
                    models.CharField(
                        db_index=True,
                        max_length=11,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Mobile number must be 11 digits starting with 09",
                                regex="^09\\d{9}$",
                            )
                        ],
                        verbose_name="Mobile number",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=6,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="OTP code must be exactly 6 digits", regex="^\\d{6}$"
                            )
                        ],
                        verbose_name="OTP Code",
                    ),
                ),
                ("is_used", models.BooleanField(default=False, verbose_name="Is used")),
                ("expires_at", models.DateTimeField(verbose_name="Expires at")),
            ],
            options={
                "verbose_name": "OTP Code",
                "verbose_name_plural": "OTP Codes",
                "db_table": "user_otp_codes",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["mobile", "expires_at", "is_used"],
                        name="user_otp_co_mobile_93b439_idx",
                    )
                ],
            },
        ),
    ]
